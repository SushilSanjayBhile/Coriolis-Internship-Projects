{"version":3,"sources":["webpack:///./src/app/search/add-patient/add-patient.component.css","webpack:///./src/app/search/add-patient/add-patient.component.html","webpack:///./src/app/search/add-patient/add-patient.component.ts","webpack:///./src/app/search/constants.ts","webpack:///./src/app/search/patient-details/patient-details.component.css","webpack:///./src/app/search/patient-details/patient-details.component.html","webpack:///./src/app/search/patient-details/patient-details.component.ts","webpack:///./src/app/search/search-form/search-form.component.css","webpack:///./src/app/search/search-form/search-form.component.html","webpack:///./src/app/search/search-form/search-form.component.ts","webpack:///./src/app/search/search-results/search-results.component.css","webpack:///./src/app/search/search-results/search-results.component.html","webpack:///./src/app/search/search-results/search-results.component.ts","webpack:///./src/app/search/search-routing.module.ts","webpack:///./src/app/search/search.module.ts"],"names":[],"mappings":";;;;;;;;;AAAA,+BAA+B,kBAAkB,GAAG,wBAAwB,uCAAuC,yBAAyB,kBAAkB,mBAAmB,GAAG,qBAAqB,oBAAoB,GAAG,qBAAqB,oBAAoB,0BAA0B,sBAAsB,oBAAoB,GAAG,WAAW,kBAAkB,oBAAoB,yBAAyB,mBAAmB,4BAA4B,GAAG,WAAW,qBAAqB,uBAAuB,GAAG,C;;;;;;;;;;;ACAtgB,qXAAqX,yBAAyB,ymBAAymB,mBAAmB,krBAAkrB,UAAU,8yE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAppD;AACkB;AAC3B;AACsC;AAChD;AAEQ;AAQvC;IASE,6BACU,EAAe,EACf,MAAc,EACd,GAAmB;QAH7B,iBA2BC;QA1BS,OAAE,GAAF,EAAE,CAAa;QACf,WAAM,GAAN,MAAM,CAAQ;QACd,QAAG,GAAH,GAAG,CAAgB;QAR7B,aAAQ,GAAG,IAAI,4CAAO,EAAE,CAAC;QAEzB,YAAO,GAAG,kDAAO,CAAC;QAClB,aAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAMxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC/B,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,GAAG,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9B,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,EAAE;YACX,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,GAAG,EAAE,EAAE;YACP,SAAS,EAAE,EAAE;YACb,aAAa,EAAE,EAAE;YACjB,OAAO,EAAE,EAAE;YACX,EAAE,EAAE,IAAI;SACT,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,KAAK;YAC5B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,EAAE,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACrD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACtD,CAAC;YACD,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAQ,GAAR;IACA,CAAC;IAED,gDAAkB,GAAlB;QAAA,iBAKC;QAJC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAE,aAAG;YAC/C,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;YAC7C,KAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,EAAE,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAW,GAAX,UAAY,KAAK;QACf,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;IACvB,CAAC;IAED,wCAAU,GAAV;QAAA,iBAQC;QAPC,EAAE,CAAC,CAAE,IAAI,CAAC,WAAW,CAAC,KAAM,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAE,UAAC,IAAa;gBACpD,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBACpC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;YACzD,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,uCAAS,GAAT;QACE,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QAC7B,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;IACpC,CAAC;IAlEU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAWc,0DAAW;YACP,sDAAM;YACT,uFAAc;OAZlB,mBAAmB,CAmE/B;IAAD,0BAAC;CAAA;AAnE+B;;;;;;;;;;;;;;;;ACdzB,IAAM,kBAAkB,GAAG,EAAE,CAAC;AAE9B,IAAM,OAAO,GAAG;IACnB;QACI,MAAM,EAAE,MAAM;QACd,OAAO,EAAE,MAAM;KAClB;IACD;QACI,MAAM,EAAE,QAAQ;QAChB,OAAO,EAAE,QAAQ;KACpB;CACJ,CAAC;;;;;;;;;;;;ACXF,mCAAmC,oBAAoB,0BAA0B,sBAAsB,oBAAoB,GAAG,WAAW,kBAAkB,oBAAoB,yBAAyB,mBAAmB,4BAA4B,GAAG,WAAW,qBAAqB,uBAAuB,GAAG,QAAQ,6BAA6B,yBAAyB,GAAG,iBAAiB,oBAAoB,0BAA0B,qCAAqC,GAAG,8CAA8C,0BAA0B,GAAG,cAAc,2BAA2B,GAAG,qBAAqB,uBAAuB,GAAG,oCAAoC,uBAAuB,4BAA4B,GAAG,C;;;;;;;;;;;ACA5tB,2qBAA2qB,gBAAgB,qQAAqQ,QAAQ,oDAAoD,SAAS,iEAAiE,gBAAgB,k8CAAk8C,eAAe,kOAAkO,iCAAiC,gZAAgZ,2BAA2B,wM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAloG;AAC1B;AACsB;AAEM;AACG;AAC9B;AACe;AAOzE;IAwBE,iCACU,GAAmB,EACnB,IAAkB,EAClB,KAAqB,EACrB,MAAc;QAHd,QAAG,GAAH,GAAG,CAAgB;QACnB,SAAI,GAAJ,IAAI,CAAc;QAClB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QAtBd,aAAQ,GAAG,IAAI,0DAAY,EAAE,CAAC;QAExC,uFAAuF;QACvF,qBAAgB,GAAG;YACjB,WAAW,EAAE,WAAW;SACzB,CAAC;QACF,eAAU,GAAG,IAAI,oEAAkB,EAAE,CAAC;QAEtC,kBAAa,GAAG,CAAC,CAAC;QAClB,qBAAgB,GAAG,IAAI,CAAC;QACxB,WAAM,GAAG,EAAE,CAAC;QACZ,WAAM,GAAG,KAAK,CAAC;QAEP,iBAAY,GAAoB,IAAI,4CAAO,EAAE,CAAC;QAEtD,YAAO,GAAY,IAAI,CAAC;QASpB,IAAI,CAAC,YAAY,GAAG;YAClB,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAC;YACnD,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAC;YACpD,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAC;YACpD,EAAE,KAAK,EAAE,eAAe,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,gBAAgB,EAAC;YACtE,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,QAAQ,EAAC;YAC1D,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,mBAAmB,EAAC;SACrE,CAAC;IACN,CAAC;IAED,8CAAY,GAAZ;QAAA,iBAUC;QATC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;QAC/C,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,mEAAY,CAAC,IAAI,CAAC,CAAC;iBACzD,SAAS,CAAC,UAAC,IAAa;gBACvB,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC;gBACpB,KAAI,CAAC,SAAS,EAAE,CAAC;YACnB,CAAC,EAAE,UAAC,KAAK,IAAK,cAAO,CAAC,KAAK,CAAC,KAAK,CAAC,EAApB,CAAoB,CAAC,CAAC;QACxC,CAAC;IACH,CAAC;IAED;;;OAGG;IACH,6CAAW,GAAX;QAAA,iBAOC;QANC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C,KAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;gBAC9B,KAAI,CAAC,YAAY,EAAE,CAAC;YACtB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CACpB,mEAAY,CAAC,GAAG,CAAC,CAClB,CAAC,SAAS,CAAC,UAAC,WAAW;YACtB,KAAI,CAAC,MAAM,GAAG,WAAW,CAAC;YAC1B,KAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAS,GAAT;QAAA,iBAwBC;QAvBC,oEAAoE;QACpE,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,EAA5B,CAA4B,CAAC,CAAC;QAEnE,kDAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aAC7C,IAAI,CACH,gEAAS,CAAC,EAAE,CAAC,EACb,gEAAS,CAAC;YACR,KAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAI,CAAC,IAAI,CAAC,SAAS,EACvE,KAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,KAAI,CAAC,SAAS,CAAC,SAAS,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC;QACvE,CAAC,CAAC,EACF,0DAAG,CAAC,UAAC,IAAS;YACZ,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC;YAChC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;YACvC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC,CAAC,EACF,iEAAU,CAAC;YACT,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;YAC9B,MAAM,CAAC,+CAAY,CAAC,EAAE,CAAC,CAAC;QAC1B,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,UAAC,IAAW;YACtB,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,6CAAW,GAAX,UAAY,WAAmB;QAC7B,WAAW,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,oBAAoB;QACtD,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,2CAA2C;QACpF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,8CAAY,GAAZ;QACE,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAE3B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACjB,gBAAgB;YAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;YACjB,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;IACH,CAAC;IAjHoB;QAApB,+DAAS,CAAC,0DAAQ,CAAC;kCAAQ,0DAAQ;0DAAM;IACjB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;8DAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;yDAAC;IAExB;QAAT,4DAAM,EAAE;;6DAA+B;IAN7B,uBAAuB;QALnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCA0Be,uFAAc;YACb,iFAAY;YACX,8DAAc;YACb,sDAAM;OA5Bb,uBAAuB,CAoHnC;IAAD,8BAAC;CAAA;AApHmC;;;;;;;;;;;;ACdpC,uCAAuC,uBAAuB,kBAAkB,GAAG,qBAAqB,uBAAuB,gCAAgC,GAAG,aAAa,sBAAsB,mBAAmB,kBAAkB,GAAG,aAAa,wBAAwB,GAAG,qBAAqB,oBAAoB,0BAA0B,0BAA0B,8BAA8B,GAAG,kBAAkB,mBAAmB,kBAAkB,GAAG,C;;;;;;;;;;;ACA7c,ynB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACkB;AACW;AACjB;AAEQ;AAEpB;AAOlD;IAcE,6BACU,EAAe,EACf,GAAmB,EACnB,kBAAsC;QAFtC,OAAE,GAAF,EAAE,CAAa;QACf,QAAG,GAAH,GAAG,CAAgB;QACnB,uBAAkB,GAAlB,kBAAkB,CAAoB;QAfhD,eAAU,GAAwB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC;aACrF,IAAI,CACH,0DAAG,CAAC,gBAAM,IAAI,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,CAC9B,CAAC;QAKF,qBAAgB,GAAG,6DAAkB,CAAC;QACtC,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAG,KAAK,CAAC;QAMlB,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAE,EAAC,CAAC,CAAC;IACzE,CAAC;IAED,sCAAQ,GAAR;QAAA,iBAgBC;QAfC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,IAAI,CAClD,mEAAY,CAAC,GAAG,CAAC,EACjB,gEAAS,CAAE,UAAC,IAAY;YACtB,MAAM,CAAC,KAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;QAC1C,CAAC,CAAC,EACF,0DAAG,CAAE,UAAC,IAAS;YACb,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACtB,CAAC,CAAC,CACH,CAAC,SAAS,CAAE,UAAC,IAAS;YACrB,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC;YAE1B,KAAI,CAAC,SAAS,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YACvC,KAAI,CAAC,WAAW,GAAG,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;YAChE,KAAI,CAAC,QAAQ,GAAI,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7D,CAAC,CAAC,CAAC;IACL,CAAC;IArCU,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAgBc,0DAAW;YACV,uFAAc;YACC,sEAAkB;OAjBrC,mBAAmB,CAuC/B;IAAD,0BAAC;CAAA;AAvC+B;;;;;;;;;;;;ACdhC,mCAAmC,oBAAoB,0BAA0B,sBAAsB,GAAG,WAAW,kBAAkB,oBAAoB,4BAA4B,yBAAyB,mBAAmB,GAAG,C;;;;;;;;;;;ACAtO,8R;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyD;AAGa;AACjC;AACI;AAOzC;IASE,gCACU,kBAAsC,EACtC,MAAc;QADd,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,WAAM,GAAN,MAAM,CAAQ;QAPxB,eAAU,GAAwB,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,+DAAW,CAAC,OAAO,CAAC;aACrF,IAAI,CACH,0DAAG,CAAC,gBAAM,IAAI,aAAM,CAAC,OAAO,EAAd,CAAc,CAAC,CAC9B,CAAC;IAKE,CAAC;IAEL,yCAAQ,GAAR;IACA,CAAC;IAED,4CAAW,GAAX,UAAY,EAAE;QACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,yCAAQ,GAAR,UAAS,EAAE;QACT,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IArBQ;QAAR,2DAAK,EAAE;;4DAAqB;IAFlB,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAW8B,sEAAkB;YAC9B,sDAAM;OAXb,sBAAsB,CAwBlC;IAAD,6BAAC;CAAA;AAxBkC;;;;;;;;;;;;;;;;;;;;;;;;;;ACZM;AACc;AACmB;AACA;AACY;AAEtF,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sFAAmB,EAAE;IAC5C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,sFAAmB,EAAE;IAClD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kGAAuB,EAAE;IAC3D,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,sFAAmB,EAAE;IAC/C,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE,SAAS,EAAE,MAAM,EAAE;CAClD,CAAC;AAMF;IAAA;IAAmC,CAAC;IAAvB,mBAAmB;QAJ/B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,mBAAmB,CAAI;IAAD,0BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBS;AACM;AAEe;AACY;AACS;AAC3B;AACH;AACD;AACsB;AACA;AACY;AAatF;IAAA;IAA4B,CAAC;IAAhB,YAAY;QAXxB,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0EAAmB;gBACnB,qEAAgB;gBAChB,kEAAmB;gBACnB,+DAAc;gBACd,qFAAgB;aACjB;YACD,YAAY,EAAE,CAAC,sFAAmB,EAAE,+FAAsB,EAAE,sFAAmB,EAAE,mGAAuB,CAAC;SAC1G,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ","file":"search-search-module.js","sourcesContent":["module.exports = \".full-width {\\n    width: 100%;\\n}\\n\\n.preview_container {\\n    border-bottom: 1px solid #666666;\\n    text-align: center;\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n.page-container {\\n    padding: 16px;\\n}\\n\\n.flex-container {\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    padding: 15px;\\n}\\n\\n.card {\\n    width: auto;\\n    height: 250px;\\n    text-align: center;\\n    padding: 0px;\\n    margin: 0 16px 16px 0;\\n}\\n\\n.info {\\n    flex: 1 1 auto;\\n    min-width: 150px;\\n}\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n    <mat-toolbar>\\n        <a mat-mini-fab [routerLink]=\\\"['/']\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">arrow_back</mat-icon>\\n        </a>\\n        <span class=\\\"spacer\\\">New Patient</span>\\n        <button mat-raised-button color=\\\"primary\\\" (click)=\\\"addPatient()\\\" disabled=\\\"{{!this.patientForm.valid}}\\\">Save</button>\\n    </mat-toolbar>\\n    <mat-divider></mat-divider>\\n\\n    <div class='flex-container'>\\n        <div class=\\\"info\\\">\\n\\n            <form [formGroup]=\\\"patientForm\\\" class=\\\"example-form\\\">\\n                <mat-grid-list cols=\\\"2\\\" gutterSize=\\\"25\\\" rowHeight=\\\"80px\\\">\\n                    <mat-grid-tile class=\\\"form-tile\\\" [colspan]=1 [rowspan]=1>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"name\\\" #name maxlength=64 placeholder=\\\"Patient Name\\\" required>\\n                            <mat-hint align=\\\"end\\\">{{name.value.length}} / 64</mat-hint>\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n\\n                    <mat-grid-tile [colspan]=\\\"1\\\" [rowspan]=\\\"3\\\">\\n                        <app-upload-photo class=\\\"preview_container\\\" [photo]=\\\"getPhoto\\\"></app-upload-photo>\\n                    </mat-grid-tile>\\n\\n                    <mat-grid-tile class=\\\"form-tile\\\" [colspan]=1 [rowspan]=1>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <mat-select placeholder=\\\"Gender\\\" formControlName=\\\"gender\\\">\\n                                <mat-option *ngFor=\\\"let g of genders\\\" [value]=\\\"g.value\\\">\\n                                    {{ g.text }}\\n                                </mat-option>\\n                            </mat-select>\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n\\n                    <mat-grid-tile class=\\\"form-tile\\\" [colspan]=1 [rowspan]=1>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"age\\\" maxlength=3 placeholder=\\\"Age\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n\\n                    <mat-grid-tile class=\\\"form-tile\\\" [colspan]=1 [rowspan]=1>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"phone\\\" maxlength=13 placeholder=\\\"Phone number\\\" required>\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n\\n                    <mat-grid-tile [colspan]=1 [rowspan]=2>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <textarea [style.height]=\\\"'121px'\\\" matInput formControlName=\\\"address\\\" maxlength=\\\"256\\\" placeholder=\\\"Address\\\"></textarea>\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n\\n                    <mat-grid-tile class=\\\"form-tile\\\" [colspan]=1 [rowspan]=1>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"relations\\\" maxlength=13 placeholder=\\\"Relation\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n\\n                    <mat-grid-tile class=\\\"form-tile\\\" [colspan]=1 [rowspan]=1>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"aadhar_number\\\" maxlength=13 placeholder=\\\"aadhar_number\\\" required>\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n\\n                    <mat-grid-tile class=\\\"form-tile\\\" [colspan]=1 [rowspan]=1>\\n                        <mat-form-field class=\\\"full-width\\\">\\n                            <input matInput formControlName=\\\"file_no\\\" maxlength=13 placeholder=\\\"File Number\\\">\\n                        </mat-form-field>\\n                    </mat-grid-tile>\\n\\n                </mat-grid-list>\\n            </form>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { PatientService } from '../../shared/services/patient/patient.service';\nimport { Subject } from 'rxjs';\n\nimport { GENDERS } from '../constants';\nimport { Patient } from '../../interfaces/patient';\n\n@Component({\n  selector: 'app-add-patient',\n  templateUrl: './add-patient.component.html',\n  styleUrls: ['./add-patient.component.css']\n})\nexport class AddPatientComponent implements OnInit {\n\n  patientForm: FormGroup;\n\n  getPhoto = new Subject();\n\n  genders = GENDERS;\n  formData = new FormData();\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private srv: PatientService) {\n    this.patientForm = this.fb.group({\n      name: ['', Validators.required],\n      gender: ['', Validators.required],\n      age: ['', Validators.required],\n      phone: '',\n      address: '',\n      photoFile: ['', Validators.required],\n      dob: '',\n      relations: '',\n      aadhar_number: '',\n      file_no: '',\n      id: null\n    });\n\n    this.getPhoto.subscribe((value) => {\n      console.log('value');\n      if (value['file_name']) {\n        this.patientForm.get('photoFile').setValue('true');\n      } else {\n        this.patientForm.get('photoFile').setValue('false');\n      }\n      this.formData.set('photo', value['file'], value['file_name']);\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  initializeFormData() {\n    Object.keys(this.patientForm.controls).forEach( key => {\n        console.log(this.patientForm.get(key).value);\n        this.formData.set(key, this.patientForm.get(key).value);\n    });\n  }\n\n  dateChanged(event) {\n    console.table(event);\n  }\n\n  addPatient() {\n    if ( this.patientForm.valid ) {\n      this.initializeFormData();\n      this.srv.post(this.formData).subscribe( (data: Patient) => {\n        console.log(this.patientForm.value);\n        this.router.navigate(['/patient', 'details', data.id]);\n      });\n    }\n  }\n\n  resetForm() {\n    console.log('reset clicked');\n    this.patientForm.reset();\n    this.patientForm.markAsPristine();\n  }\n}\n","export const MAX_SEARCH_RESULTS = 10;\n\nexport const GENDERS = [\n    {\n        'text': 'Male',\n        'value': 'Male'\n    },\n    {\n        'text': 'Female',\n        'value': 'Female'\n    },\n];\n\n","module.exports = \".flex-container {\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    padding: 15px;\\n}\\n\\n.card {\\n    width: auto;\\n    height: 250px;\\n    text-align: center;\\n    padding: 0px;\\n    margin: 0 16px 16px 0;\\n}\\n\\n.info {\\n    flex: 1 1 auto;\\n    min-width: 150px;\\n}\\n\\nh2 {\\n    padding: 0 30px 0 30px;\\n    margin-bottom: 4px;\\n}\\n\\n.button-row {\\n    display: flex;\\n    margin-bottom: 20px;\\n    justify-content: space-between;\\n}\\n\\n.info .mat-list .mat-list-item .mat-line {\\n    white-space: normal;\\n}\\n\\n.info h4 {\\n    font-weight: lighter;\\n}\\n\\n.info .mat-list {\\n    max-width: 550px;\\n}\\n\\n.info .mat-list .mat-list-item {\\n    min-width: 275px;\\n    display: inline-block;\\n}\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n    <div *ngIf=\\\"patient\\\">\\n        <mat-toolbar>\\n            <a mat-mini-fab [routerLink]=\\\"['/patients', 'search']\\\">\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">arrow_back</mat-icon>\\n            </a>\\n            <span class=\\\"spacer\\\">Patient Information</span>\\n            <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/visit', 'add', 'patient', this.patient.id]\\\">\\n                <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">add</mat-icon> Visit\\n            </a>\\n        </mat-toolbar>\\n        <mat-divider></mat-divider>\\n        <h2 class=\\\"name\\\">{{ patient.name }}</h2>\\n        <div class=\\\"flex-container\\\">\\n            <div class=\\\"info\\\">\\n                <mat-list role=\\\"list\\\">\\n                    <mat-list-item role=\\\"listitem\\\" *ngFor=\\\"let p of patientProps\\\">\\n                        <mat-icon mat-list-icon>{{p.icon}}</mat-icon>\\n                        <h4 mat-line>{{p.label}}</h4>\\n                        <p mat-line [ngClass]=\\\"p.key\\\">{{patient[p.key]}}</p>\\n                    </mat-list-item>\\n                </mat-list>\\n            </div>\\n            <mat-card class=\\\"card\\\">\\n                <app-image-tile [resource]=\\\"patient\\\"></app-image-tile>\\n            </mat-card>\\n        </div>\\n        <mat-toolbar>\\n            <mat-toolbar-row>\\n                <span>Visits</span>\\n                <span class=\\\"spacer\\\"></span>\\n                <!--\\n            <button mat-icon-button (click)=\\\"toggleSearch()\\\">\\n                  <mat-icon aria-label=\\\"add candidate\\\">search</mat-icon>\\n              </button>\\n            <a mat-icon-button [routerLink]=\\\"['/visit', 'add', 'patient', this.patientId]\\\">\\n                <mat-icon aria-label=\\\"schedule interview\\\">add</mat-icon>\\n            </a>\\n            -->\\n            </mat-toolbar-row>\\n            <mat-toolbar-row *ngIf=\\\"filter\\\">\\n                <mat-form-field>\\n                    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n                </mat-form-field>\\n            </mat-toolbar-row>\\n        </mat-toolbar>\\n    </div>\\n    <mat-table [hidden]=\\\"!patient\\\" #table [dataSource]=\\\"dataSource\\\" matSort matSortActive=\\\"timestamp\\\" matSortDisableClear matSortDirection=\\\"desc\\\" aria-label=\\\"Visits\\\">\\n\\n        <ng-container matColumnDef=\\\"diagnosis\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Diagnosis</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">{{row.diagnosis}}</mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"timestamp\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">{{row.timestamp | date : 'short' }}</mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Actions</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">\\n\\n            </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n\\n    <mat-paginator #paginator [length]=\\\"resultsLength\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"50\\\" [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n    </mat-paginator>\\n</div>\"","import { Component, OnInit, Output, ViewChild, EventEmitter } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { PatientService } from '../../shared/services/patient/patient.service';\nimport { Patient } from '../../interfaces/patient';\nimport { debounceTime, startWith, switchMap, map, catchError } from 'rxjs/operators';\nimport { MatSort, MatPaginator, MatTable, MatTableDataSource } from '@angular/material';\nimport { Subject, of as observableOf, merge } from 'rxjs';\nimport { VisitService } from '../../shared/services/visit/visit.service';\n\n@Component({\n  selector: 'app-patient-details',\n  templateUrl: './patient-details.component.html',\n  styleUrls: ['./patient-details.component.css']\n})\nexport class PatientDetailsComponent implements OnInit {\n\n  @ViewChild(MatTable) table: MatTable<any>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @Output() dataLoad = new EventEmitter();\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = [\n    'timestamp', 'diagnosis'\n  ];\n  dataSource = new MatTableDataSource();\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  search = '';\n  filter = false;\n  patientId: number;\n  private searchStream: Subject<string> = new Subject();\n\n  patient: Patient = null;\n  patientProps: {}[];\n\n  constructor(\n    private srv: PatientService,\n    private vsrv: VisitService,\n    private route: ActivatedRoute,\n    private router: Router) {\n\n      this.patientProps = [\n        { 'key': 'gender', 'label': 'Gender', 'icon': 'wc'},\n        { 'key': 'age', 'label': 'Age', 'icon': 'timelapse'},\n        { 'key': 'phone', 'label': 'Phone', 'icon': 'phone'},\n        { 'key': 'aadhar_number', 'label': 'Aadhar', 'icon': 'featured_video'},\n        { 'key': 'file_no', 'label': 'File no.', 'icon': 'folder'},\n        { 'key': 'address', 'label': 'Address', 'icon': 'person_pin_circle'}\n      ];\n  }\n\n  fetchPatient() {\n    if (!this.patientId) {\n      this.router.navigate(['/patient', 'search']);\n    } else {\n      this.srv.getDetails(this.patientId).pipe(debounceTime(2000))\n        .subscribe((data: Patient) => {\n          this.patient = data;\n          this.initTable();\n        }, (error) => console.table(error));\n    }\n  }\n\n  /**\n   * Looks for route params and if present,\n   * fetches the data for that candidate\n   */\n  parseParams() {\n    this.route.params.subscribe(params => {\n      if (Object.keys(params).indexOf('id') !== -1) {\n        this.patientId = params['id'];\n        this.fetchPatient();\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.parseParams();\n    this.searchStream.pipe(\n      debounceTime(500),\n    ).subscribe((searchValue) => {\n      this.search = searchValue;\n      this.initTable();\n    });\n  }\n\n  initTable() {\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.vsrv.getVisitsByPatient(this.sort.active, this.sort.direction,\n            this.paginator.pageSize, this.paginator.pageIndex, this.patientId);\n        }),\n        map((data: any) => {\n          this.resultsLength = data.count;\n          this.dataLoad.emit(this.resultsLength);\n          return data.results;\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          return observableOf([]);\n        })\n      ).subscribe((data: any[]) => {\n        this.dataSource.data = data;\n      });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.searchStream.next(filterValue);\n  }\n\n  toggleSearch() {\n    this.filter = !this.filter;\n\n    if (!this.filter) {\n      // reset search;\n      this.search = '';\n      this.initTable();\n    }\n  }\n}\n","module.exports = \".form,\\n.full-width {\\n    max-width: 600px;\\n    width: 100%;\\n}\\n\\n.full-width-btn {\\n    max-width: 600px;\\n    width: calc(100% - 132px);\\n}\\n\\n.addBtn {\\n    position: fixed;\\n    bottom: 20px;\\n    right: 20px;\\n}\\n\\n.newBtn {\\n    margin-left: 20px;\\n}\\n\\n.flex-container {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    justify-content: center;\\n}\\n\\n.full-screen {\\n    height: 100%;\\n    width: 100%;\\n}\"","module.exports = \"<div class=\\\"flex-container full-screen\\\">\\n    <form [formGroup]=\\\"searchPatientForm\\\" class=\\\"form\\\">\\n        <mat-form-field class=\\\"full-width-btn\\\">\\n            <input matInput placeholder=\\\"Search Patient By Name\\\" aria-label=\\\"Patients Name\\\" formControlName=\\\"name\\\" autocomplete=\\\"off\\\">\\n        </mat-form-field>\\n        <a mat-raised-button class=\\\"newBtn\\\" color=\\\"primary\\\" [routerLink]=\\\"['/patient/add']\\\">Add Patient</a>\\n    </form>\\n</div>\\n<p *ngIf=\\\"noResults\\\">No results</p>\\n<p *ngIf=\\\"moreResults\\\">too many results</p>\\n<app-search-results [patients]=\\\"patients\\\"></app-search-results>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { PatientService } from '../../shared/services/patient/patient.service';\nimport { map, switchMap, debounceTime } from 'rxjs/operators';\nimport { Patient } from '../../interfaces/patient';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { MAX_SEARCH_RESULTS } from '../constants';\n\n@Component({\n  selector: 'app-search-form',\n  templateUrl: './search-form.component.html',\n  styleUrls: ['./search-form.component.css']\n})\nexport class SearchFormComponent implements OnInit {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches)\n  );\n\n  searchPatientForm: FormGroup;\n\n  patients: Patient[];\n  maxSearchResults = MAX_SEARCH_RESULTS;\n  noResults = false;\n  moreResults = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private srv: PatientService,\n    private breakpointObserver: BreakpointObserver) {\n    this.searchPatientForm = fb.group({ name: ['', Validators.required ]});\n  }\n\n  ngOnInit() {\n    this.searchPatientForm.get('name').valueChanges.pipe(\n      debounceTime(500),\n      switchMap( (data: string) => {\n        return this.srv.get('', '', 0, 0, data);\n      }),\n      map( (data: any) => {\n        return data.results;\n      })\n    ).subscribe( (data: any) => {\n      const total = data.length;\n\n      this.noResults = !total ? true : false;\n      this.moreResults = total > this.maxSearchResults ? true : false;\n      this.patients =  total < this.maxSearchResults ? data : [];\n    });\n  }\n\n}\n","module.exports = \".flex-container {\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n}\\n\\n.card {\\n    width: auto;\\n    height: 200px;\\n    margin: 0 10px 10px 0;\\n    text-align: center;\\n    padding: 0px;\\n}\"","module.exports = \"<!-- Search output -->\\n<div class=\\\"flex-container\\\">\\n    <mat-card class=\\\"card\\\" *ngFor=\\\"let patient of patients\\\" (click)=\\\"gotoDetails(patient.id)\\\">\\n        <app-image-tile [resource]=\\\"patient\\\" [showName]=\\\"true\\\"></app-image-tile>\\n    </mat-card>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Patient } from '../../interfaces/patient';\nimport { Observable } from 'rxjs';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\nimport { map } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-search-results',\n  templateUrl: './search-results.component.html',\n  styleUrls: ['./search-results.component.css']\n})\nexport class SearchResultsComponent implements OnInit {\n\n  @Input() patients: Patient[];\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches)\n  );\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  gotoDetails(id) {\n    this.router.navigate(['/patient', 'details', id]);\n  }\n\n  addVisit(id) {\n    this.router.navigate(['/visit', 'add', 'patient', id]);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SearchFormComponent } from './search-form/search-form.component';\nimport { AddPatientComponent } from './add-patient/add-patient.component';\nimport { PatientDetailsComponent } from './patient-details/patient-details.component';\n\nconst routes: Routes = [\n  { path: '', component: SearchFormComponent },\n  { path: 'search', component: SearchFormComponent },\n  { path: 'details/:id', component: PatientDetailsComponent },\n  { path: 'add', component: AddPatientComponent },\n  { path: '**', redirectTo: '', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SearchRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SearchRoutingModule } from './search-routing.module';\nimport { SearchFormComponent } from './search-form/search-form.component';\nimport { SearchResultsComponent } from './search-results/search-results.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\nimport { AddPatientComponent } from './add-patient/add-patient.component';\nimport { ComponentsModule } from '../shared/components/components.module';\nimport { PatientDetailsComponent } from './patient-details/patient-details.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SearchRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    ComponentsModule,\n  ],\n  declarations: [SearchFormComponent, SearchResultsComponent, AddPatientComponent, PatientDetailsComponent]\n})\nexport class SearchModule { }\n"],"sourceRoot":""}