{"version":3,"sources":["webpack:///./src/app/visit/add-visit/add-visit.component.html","webpack:///./src/app/visit/add-visit/add-visit.component.ts","webpack:///./src/app/visit/list-visits/list-visits.component.html","webpack:///./src/app/visit/list-visits/list-visits.component.ts","webpack:///./src/app/visit/visit-routing.module.ts","webpack:///./src/app/visit/visit.module.ts"],"names":[],"mappings":"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","file":"visit-visit-module-ngfactory.js","sourcesContent":["<div class=\"mat-elevation-z8\" *ngIf=\"patient\">\n    <mat-toolbar>\n        <a mat-mini-fab [routerLink]=\"['/patient', 'details', patientId]\">\n            <mat-icon aria-label=\"Example icon-button with a heart icon\">arrow_back</mat-icon>\n        </a>\n        <span class=\"spacer\">New Visit</span>\n        <a mat-raised-button color=\"primary\" [routerLink]=\"['/visit', 'add', 'patient', this.patient.id]\" (click)=\"addVisit()\">Save</a>\n    </mat-toolbar>\n    <mat-divider></mat-divider>\n    <h2 class=\"name\">{{ patient.name }}</h2>\n    <div class=\"flex-container\">\n        <div class=\"info\">\n            <form [formGroup]=\"visitForm\" class=\"form\">\n                <mat-form-field class=\"full-width\">\n                    <textarea matInput [style.height]=\"'100px'\" formControlName=\"diagnosis\" #color maxlength=\"256\" placeholder=\"Diagnosis\"></textarea>\n                </mat-form-field>\n            </form>\n        </div>\n        <mat-card class=\"card\">\n            <app-image-tile [resource]=\"patient\"></app-image-tile>\n        </mat-card>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Visit } from '../../interfaces/visit';\nimport { VisitService } from '../../shared/services/visit/visit.service';\nimport { PatientService } from '../../shared/services/patient/patient.service';\nimport { Patient } from '../../interfaces/patient';\n\n@Component({\n  selector: 'app-add-visit',\n  templateUrl: './add-visit.component.html',\n  styleUrls: ['./add-visit.component.css']\n})\nexport class AddVisitComponent implements OnInit {\n\n  visitForm: FormGroup;\n\n  patientId: number;\n  patient: Patient;\n\n  constructor(\n    private srv: VisitService,\n    private srvP: PatientService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router) {\n\n    this.visitForm = this.fb.group({\n      patient: [null, Validators.required],\n      diagnosis: ['', Validators.required]\n    });\n\n    this.parseParams();\n\n  }\n\n  ngOnInit() {\n    this.fetchPatient();\n  }\n\n  addVisit() {\n    const data = this.visitForm.value;\n    this.srv.post(data)\n      .subscribe( (d: Visit) => {\n        this.router.navigate(['/patient', 'details', d.patient]);\n      }, (error) => {\n      });\n  }\n\n  fetchPatient() {\n    if (!this.patientId) {\n      this.router.navigate(['/patient', 'search']);\n    } else {\n      this.srvP.getDetails(this.patientId)\n        .subscribe((data: Patient) => {\n          this.patient = data;\n          this.visitForm.get('patient').setValue(this.patient.id);\n        }, (error) => {\n              alert(error);\n          });\n    }\n  }\n\n  /**\n   * Looks for route params and if present,\n   * fetches the data for that candidate\n   */\n  parseParams() {\n    this.route.params.subscribe(params => {\n      if (Object.keys(params).indexOf('id') !== -1) {\n        this.patientId = params['id'];\n      }\n    });\n  }\n\n}\n","<div class=\"mat-elevation-z8\">\n    <mat-toolbar>\n        <mat-toolbar-row>\n            <span>Visits</span>\n            <span class=\"spacer\"></span>\n            <button mat-icon-button (click)=\"toggleSearch()\">\n              <mat-icon aria-label=\"add candidate\">search</mat-icon>\n          </button>\n            <a mat-icon-button [routerLink]=\"['/visit', 'add', 'patient', this.patientId]\">\n                <mat-icon aria-label=\"schedule interview\">add</mat-icon>\n            </a>\n        </mat-toolbar-row>\n        <mat-toolbar-row *ngIf=\"filter\">\n            <mat-form-field>\n                <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search\">\n            </mat-form-field>\n        </mat-toolbar-row>\n    </mat-toolbar>\n    <mat-table #table [dataSource]=\"dataSource\" matSort aria-label=\"Elements\">\n        <!-- Id Column -->\n        <ng-container matColumnDef=\"patient\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Patient</mat-header-cell>\n            <mat-cell *matCellDef=\"let row\">{{row.patient}}</mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"diagnosis\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Diagnosis</mat-header-cell>\n            <mat-cell *matCellDef=\"let row\">{{row.diagnosis}}</mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"timestamp\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\n            <mat-cell *matCellDef=\"let row\">{{row.timestamp | date : 'short' }}</mat-cell>\n        </ng-container>\n\n        <ng-container matColumnDef=\"actions\">\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Actions</mat-header-cell>\n            <mat-cell *matCellDef=\"let row\">\n\n            </mat-cell>\n        </ng-container>\n\n        <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n        <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n    </mat-table>\n\n    <mat-paginator #paginator [length]=\"dataSource.data.length\" [pageIndex]=\"0\" [pageSize]=\"50\" [pageSizeOptions]=\"[25, 50, 100, 250]\">\n    </mat-paginator>\n</div>","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { MatPaginator, MatSort, MatTable, MatTableDataSource } from '@angular/material';\nimport { Observable, Subject} from 'rxjs';\nimport {merge} from 'rxjs';\nimport {of as observableOf} from 'rxjs';\nimport { map, startWith, switchMap, catchError, debounceTime } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { VisitService } from '../../shared/services/visit/visit.service';\n\n@Component({\n  selector: 'app-list-visits',\n  templateUrl: './list-visits.component.html',\n  styleUrls: ['./list-visits.component.css']\n})\nexport class ListVisitsComponent implements OnInit {\n\n  @ViewChild(MatTable) table: MatTable<any>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @Output() dataLoad = new EventEmitter();\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = [\n    'patient', 'diagnosis', 'timestamp'\n  ];\n  dataSource = new MatTableDataSource();\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  selectedRows: Array<string>;\n  allSelected = false;\n  search = '';\n  filter = false;\n  patientId: number;\n  private searchStream: Subject<string> = new Subject();\n\n  constructor(private srv: VisitService, private route: ActivatedRoute, private router: Router) {\n    this.parseParams();\n  }\n\n  /**\n   * Looks for route params and if present,\n   * fetches the data for that candidate\n   */\n  parseParams() {\n    this.route.params.subscribe(params => {\n      if (Object.keys(params).indexOf('id') !== -1) {\n        this.patientId = params['id'];\n        // this.fetchPatient();\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.searchStream.pipe(\n      debounceTime(500),\n    ).subscribe((searchValue) => {\n      this.search = searchValue;\n      this.initTable();\n    });\n    this.initTable();\n  }\n\n  initTable() {\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.srv.getVisitsByPatient(this.sort.active, this.sort.direction,\n            this.paginator.pageSize, this.paginator.pageIndex, this.patientId);\n        }),\n        map( (data: any) => {\n          return data.results;\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          return observableOf([]);\n        })\n      ).subscribe((data: any[]) => {\n        this.dataSource.data = data;\n      });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.searchStream.next(filterValue);\n  }\n\n  toggleSearch() {\n    this.filter = !this.filter;\n\n    if (!this.filter) {\n      // reset search;\n      this.search = '';\n      this.initTable();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddVisitComponent } from './add-visit/add-visit.component';\nimport { ListVisitsComponent } from './list-visits/list-visits.component';\n\nconst routes: Routes = [\n  { path: '', component: ListVisitsComponent },\n  { path: 'patient/:id', component: ListVisitsComponent },\n  { path: 'add/patient/:id', component: AddVisitComponent },\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VisitRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VisitRoutingModule } from './visit-routing.module';\nimport { AddVisitComponent } from './add-visit/add-visit.component';\nimport { ListVisitsComponent } from './list-visits/list-visits.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\nimport { ComponentsModule } from '../shared/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    VisitRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    ComponentsModule,\n  ],\n  declarations: [AddVisitComponent, ListVisitsComponent]\n})\nexport class VisitModule { }\n"],"sourceRoot":""}