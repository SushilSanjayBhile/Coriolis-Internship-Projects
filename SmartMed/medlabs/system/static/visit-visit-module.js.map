{"version":3,"sources":["webpack:///./src/app/visit/add-visit/add-visit.component.css","webpack:///./src/app/visit/add-visit/add-visit.component.html","webpack:///./src/app/visit/add-visit/add-visit.component.ts","webpack:///./src/app/visit/list-visits/list-visits.component.css","webpack:///./src/app/visit/list-visits/list-visits.component.html","webpack:///./src/app/visit/list-visits/list-visits.component.ts","webpack:///./src/app/visit/visit-routing.module.ts","webpack:///./src/app/visit/visit.module.ts"],"names":[],"mappings":"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","file":"visit-visit-module.js","sourcesContent":["module.exports = \".flex-container {\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    padding: 15px;\\n}\\n\\n.card {\\n    width: auto;\\n    height: 250px;\\n    text-align: center;\\n    padding: 0px;\\n    margin: 0 16px 16px 0;\\n}\\n\\n.info {\\n    flex: 1 1 auto;\\n    min-width: 150px;\\n    padding: 16px;\\n}\\n\\nh2 {\\n    padding: 0 30px 0 30px;\\n    margin-bottom: 4px;\\n}\\n\\n.form,\\n.full-width {\\n    max-width: 600px;\\n    width: 100%;\\n}\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\" *ngIf=\\\"patient\\\">\\n    <mat-toolbar>\\n        <a mat-mini-fab [routerLink]=\\\"['/patient', 'details', patientId]\\\">\\n            <mat-icon aria-label=\\\"Example icon-button with a heart icon\\\">arrow_back</mat-icon>\\n        </a>\\n        <span class=\\\"spacer\\\">New Visit</span>\\n        <a mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/visit', 'add', 'patient', this.patient.id]\\\" (click)=\\\"addVisit()\\\">Save</a>\\n    </mat-toolbar>\\n    <mat-divider></mat-divider>\\n    <h2 class=\\\"name\\\">{{ patient.name }}</h2>\\n    <div class=\\\"flex-container\\\">\\n        <div class=\\\"info\\\">\\n            <form [formGroup]=\\\"visitForm\\\" class=\\\"form\\\">\\n                <mat-form-field class=\\\"full-width\\\">\\n                    <textarea matInput [style.height]=\\\"'100px'\\\" formControlName=\\\"diagnosis\\\" #color maxlength=\\\"256\\\" placeholder=\\\"Diagnosis\\\"></textarea>\\n                </mat-form-field>\\n            </form>\\n        </div>\\n        <mat-card class=\\\"card\\\">\\n            <app-image-tile [resource]=\\\"patient\\\"></app-image-tile>\\n        </mat-card>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Visit } from '../../interfaces/visit';\nimport { VisitService } from '../../shared/services/visit/visit.service';\nimport { PatientService } from '../../shared/services/patient/patient.service';\nimport { Patient } from '../../interfaces/patient';\n\n@Component({\n  selector: 'app-add-visit',\n  templateUrl: './add-visit.component.html',\n  styleUrls: ['./add-visit.component.css']\n})\nexport class AddVisitComponent implements OnInit {\n\n  visitForm: FormGroup;\n\n  patientId: number;\n  patient: Patient;\n\n  constructor(\n    private srv: VisitService,\n    private srvP: PatientService,\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router) {\n\n    this.visitForm = this.fb.group({\n      patient: [null, Validators.required],\n      diagnosis: ['', Validators.required]\n    });\n\n    this.parseParams();\n\n  }\n\n  ngOnInit() {\n    this.fetchPatient();\n  }\n\n  addVisit() {\n    const data = this.visitForm.value;\n    this.srv.post(data)\n      .subscribe( (d: Visit) => {\n        this.router.navigate(['/patient', 'details', d.patient]);\n      }, (error) => {\n      });\n  }\n\n  fetchPatient() {\n    if (!this.patientId) {\n      this.router.navigate(['/patient', 'search']);\n    } else {\n      this.srvP.getDetails(this.patientId)\n        .subscribe((data: Patient) => {\n          this.patient = data;\n          this.visitForm.get('patient').setValue(this.patient.id);\n        }, (error) => {\n              alert(error);\n          });\n    }\n  }\n\n  /**\n   * Looks for route params and if present,\n   * fetches the data for that candidate\n   */\n  parseParams() {\n    this.route.params.subscribe(params => {\n      if (Object.keys(params).indexOf('id') !== -1) {\n        this.patientId = params['id'];\n      }\n    });\n  }\n\n}\n","module.exports = \".spacer {\\n    flex: 1 1 auto;\\n}\"","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n    <mat-toolbar>\\n        <mat-toolbar-row>\\n            <span>Visits</span>\\n            <span class=\\\"spacer\\\"></span>\\n            <button mat-icon-button (click)=\\\"toggleSearch()\\\">\\n              <mat-icon aria-label=\\\"add candidate\\\">search</mat-icon>\\n          </button>\\n            <a mat-icon-button [routerLink]=\\\"['/visit', 'add', 'patient', this.patientId]\\\">\\n                <mat-icon aria-label=\\\"schedule interview\\\">add</mat-icon>\\n            </a>\\n        </mat-toolbar-row>\\n        <mat-toolbar-row *ngIf=\\\"filter\\\">\\n            <mat-form-field>\\n                <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Search\\\">\\n            </mat-form-field>\\n        </mat-toolbar-row>\\n    </mat-toolbar>\\n    <mat-table #table [dataSource]=\\\"dataSource\\\" matSort aria-label=\\\"Elements\\\">\\n        <!-- Id Column -->\\n        <ng-container matColumnDef=\\\"patient\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Patient</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">{{row.patient}}</mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"diagnosis\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Diagnosis</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">{{row.diagnosis}}</mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"timestamp\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Date</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">{{row.timestamp | date : 'short' }}</mat-cell>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"actions\\\">\\n            <mat-header-cell *matHeaderCellDef mat-sort-header>Actions</mat-header-cell>\\n            <mat-cell *matCellDef=\\\"let row\\\">\\n\\n            </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n\\n    <mat-paginator #paginator [length]=\\\"dataSource.data.length\\\" [pageIndex]=\\\"0\\\" [pageSize]=\\\"50\\\" [pageSizeOptions]=\\\"[25, 50, 100, 250]\\\">\\n    </mat-paginator>\\n</div>\"","import { Component, OnInit, ViewChild, Output, EventEmitter } from '@angular/core';\nimport { MatPaginator, MatSort, MatTable, MatTableDataSource } from '@angular/material';\nimport { Observable, Subject} from 'rxjs';\nimport {merge} from 'rxjs';\nimport {of as observableOf} from 'rxjs';\nimport { map, startWith, switchMap, catchError, debounceTime } from 'rxjs/operators';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { VisitService } from '../../shared/services/visit/visit.service';\n\n@Component({\n  selector: 'app-list-visits',\n  templateUrl: './list-visits.component.html',\n  styleUrls: ['./list-visits.component.css']\n})\nexport class ListVisitsComponent implements OnInit {\n\n  @ViewChild(MatTable) table: MatTable<any>;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @Output() dataLoad = new EventEmitter();\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = [\n    'patient', 'diagnosis', 'timestamp'\n  ];\n  dataSource = new MatTableDataSource();\n\n  resultsLength = 0;\n  isLoadingResults = true;\n  selectedRows: Array<string>;\n  allSelected = false;\n  search = '';\n  filter = false;\n  patientId: number;\n  private searchStream: Subject<string> = new Subject();\n\n  constructor(private srv: VisitService, private route: ActivatedRoute, private router: Router) {\n    this.parseParams();\n  }\n\n  /**\n   * Looks for route params and if present,\n   * fetches the data for that candidate\n   */\n  parseParams() {\n    this.route.params.subscribe(params => {\n      if (Object.keys(params).indexOf('id') !== -1) {\n        this.patientId = params['id'];\n        // this.fetchPatient();\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.searchStream.pipe(\n      debounceTime(500),\n    ).subscribe((searchValue) => {\n      this.search = searchValue;\n      this.initTable();\n    });\n    this.initTable();\n  }\n\n  initTable() {\n    // If the user changes the sort order, reset back to the first page.\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n\n    merge(this.sort.sortChange, this.paginator.page)\n      .pipe(\n        startWith({}),\n        switchMap(() => {\n          this.isLoadingResults = true;\n          return this.srv.getVisitsByPatient(this.sort.active, this.sort.direction,\n            this.paginator.pageSize, this.paginator.pageIndex, this.patientId);\n        }),\n        map( (data: any) => {\n          return data.results;\n        }),\n        catchError(() => {\n          this.isLoadingResults = false;\n          return observableOf([]);\n        })\n      ).subscribe((data: any[]) => {\n        this.dataSource.data = data;\n      });\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n    this.searchStream.next(filterValue);\n  }\n\n  toggleSearch() {\n    this.filter = !this.filter;\n\n    if (!this.filter) {\n      // reset search;\n      this.search = '';\n      this.initTable();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AddVisitComponent } from './add-visit/add-visit.component';\nimport { ListVisitsComponent } from './list-visits/list-visits.component';\n\nconst routes: Routes = [\n  { path: '', component: ListVisitsComponent },\n  { path: 'patient/:id', component: ListVisitsComponent },\n  { path: 'add/patient/:id', component: AddVisitComponent },\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class VisitRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VisitRoutingModule } from './visit-routing.module';\nimport { AddVisitComponent } from './add-visit/add-visit.component';\nimport { ListVisitsComponent } from './list-visits/list-visits.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from '../material.module';\nimport { ComponentsModule } from '../shared/components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    VisitRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    ComponentsModule,\n  ],\n  declarations: [AddVisitComponent, ListVisitsComponent]\n})\nexport class VisitModule { }\n"],"sourceRoot":""}